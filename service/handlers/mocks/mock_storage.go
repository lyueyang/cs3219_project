// Code generated by MockGen. DO NOT EDIT.
// Source: handle_accounts.go

// Package mock is a generated GoMock package.
package mock

import (
	storage "cs3219_project/storage"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStorageService is a mock of StorageService interface.
type MockStorageService struct {
	ctrl     *gomock.Controller
	recorder *MockStorageServiceMockRecorder
}

// MockStorageServiceMockRecorder is the mock recorder for MockStorageService.
type MockStorageServiceMockRecorder struct {
	mock *MockStorageService
}

// NewMockStorageService creates a new mock instance.
func NewMockStorageService(ctrl *gomock.Controller) *MockStorageService {
	mock := &MockStorageService{ctrl: ctrl}
	mock.recorder = &MockStorageServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageService) EXPECT() *MockStorageServiceMockRecorder {
	return m.recorder
}

// DeleteAccount mocks base method.
func (m *MockStorageService) DeleteAccount(a string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteAccount", a)
}

// DeleteAccount indicates an expected call of DeleteAccount.
func (mr *MockStorageServiceMockRecorder) DeleteAccount(a interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAccount", reflect.TypeOf((*MockStorageService)(nil).DeleteAccount), a)
}

// GetAccounts mocks base method.
func (m *MockStorageService) GetAccounts() []storage.Account {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccounts")
	ret0, _ := ret[0].([]storage.Account)
	return ret0
}

// GetAccounts indicates an expected call of GetAccounts.
func (mr *MockStorageServiceMockRecorder) GetAccounts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccounts", reflect.TypeOf((*MockStorageService)(nil).GetAccounts))
}

// StoreAccount mocks base method.
func (m *MockStorageService) StoreAccount(a storage.Account) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "StoreAccount", a)
}

// StoreAccount indicates an expected call of StoreAccount.
func (mr *MockStorageServiceMockRecorder) StoreAccount(a interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreAccount", reflect.TypeOf((*MockStorageService)(nil).StoreAccount), a)
}

// UpdateAccount mocks base method.
func (m *MockStorageService) UpdateAccount(a storage.Account) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateAccount", a)
}

// UpdateAccount indicates an expected call of UpdateAccount.
func (mr *MockStorageServiceMockRecorder) UpdateAccount(a interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAccount", reflect.TypeOf((*MockStorageService)(nil).UpdateAccount), a)
}
